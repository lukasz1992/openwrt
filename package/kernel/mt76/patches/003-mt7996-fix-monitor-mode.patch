--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -422,6 +422,7 @@ static int mt7996_config(struct ieee8021
 		mt76_rmw_field(dev, MT_DMA_DCR0(phy->mt76->band_idx),
 			       MT_DMA_DCR0_RXD_G5_EN, enabled);
 		mt76_wr(dev, MT_WF_RFCR(phy->mt76->band_idx), phy->rxfilter);
+		mt7996_mcu_set_sniffer_mode(phy, enabled);
 	}
 
 	mutex_unlock(&dev->mt76.mutex);
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -4495,6 +4495,27 @@ int mt7996_mcu_wed_rro_reset_sessions(st
 				 sizeof(req), true);
 }
 
+int mt7996_mcu_set_sniffer_mode(struct mt7996_phy *phy, bool enabled)
+{
+	struct mt7996_dev *dev = phy->dev;
+	struct {
+		u8 band_idx;
+		u8 _rsv[3];
+		__le16 tag;
+		__le16 len;
+		u8 enable;
+		u8 _pad[3];
+	} __packed req = {
+		.band_idx = phy->mt76->band_idx,
+		.tag = 0,
+		.len = cpu_to_le16(sizeof(req) - 4),
+		.enable = enabled,
+	};
+
+	return mt76_mcu_send_msg(&dev->mt76, MCU_WM_UNI_CMD(SNIFFER), &req,
+				 sizeof(req), true);
+}
+
 int mt7996_mcu_set_txpower_sku(struct mt7996_phy *phy)
 {
 #define TX_POWER_LIMIT_TABLE_RATE	0
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -562,6 +562,7 @@ void mt7996_mcu_rx_event(struct mt7996_d
 void mt7996_mcu_exit(struct mt7996_dev *dev);
 int mt7996_mcu_get_all_sta_info(struct mt7996_phy *phy, u16 tag);
 int mt7996_mcu_wed_rro_reset_sessions(struct mt7996_dev *dev, u16 id);
+int mt7996_mcu_set_sniffer_mode(struct mt7996_phy *phy, bool enabled);
 
 static inline u8 mt7996_max_interface_num(struct mt7996_dev *dev)
 {
